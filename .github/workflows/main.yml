name: Java CI with Maven

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - uses: ayltai/setup-graalvm@v1
      with:
        java-version: 11
        graalvm-version: 20.3.0
        native-image: true
    - run: java -version
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        # Artifact name
        name: BlackSpider-1.0-SNAPSHOT.jar
        path: ./target/BlackSpider-1.0-SNAPSHOT.jar
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 1.0
        release_name: Release 1.0
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/BlackSpider-1.0.jar
        asset_name: BlackSpider-1.0.jar
        asset_content_type: application/octet-stream
